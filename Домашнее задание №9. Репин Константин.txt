-- ДЗ по теме “Транзакции, переменные, представления”

-- 1) В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. 
-- Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. 
-- Используйте транзакции.

-- Вопрос: задание подразумевает удаление записи с id = 1 из исходной таблицы
-- users в БД shop ?  Выполнил с удалением

START TRANSACTION; 
INSERT INTO sample.users SELECT * FROM shop.users WHERE id = 1;
DELETE FROM shop.users WHERE id = 1 LIMIT 1;
COMMIT;


-- 2) Создайте представление, которое выводит название name товарной позиции 
-- из таблицы products и соответствующее название каталога name из таблицы catalogs.

USE shop;

CREATE VIEW name 
	AS SELECT products.name AS product_name , catalogs.name AS catalog_name
		FROM products 
			JOIN catalogs
				ON products.catalog_id = catalogs.id;
		
SELECT * FROM name;


-- ДЗ по теме “Хранимые процедуры и функции, триггеры”

-- 1)  Создайте хранимую функцию hello(), которая будет возвращать приветствие, 
-- в зависимости от текущего времени суток. С 6:00 до 12:00 функция должна 
-- возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать 
-- фразу "Добрый день", с 18:00 до 00:00 — "Добрый вечер", 
--                      с 00:00 до 6:00 — "Доброй ночи".

DROP FUNCTION IF EXISTS hello;
DELIMITER //
CREATE FUNCTION hello()
BEGIN
	CASE format
		WHEN SELECT CURTIME() >= TIME('06:00:00') AND SELECT CURTIME() <= TIME('12:00:00') 
		 	THEN SELECT 'Доброе утро!';
		WHEN SELECT CURTIME() > TIME('12:00:00') AND SELECT CURTIME() <= TIME('18:00:00')
			THEN SELECT 'Добрый день!';
		WHEN SELECT CURTIME() > TIME('18:00:00') AND SELECT CURTIME() <= TIME('00:00:00')
			THEN SELECT 'Добрый вечер!';
		ELSE SELECT 'Доброй ночи!';
	END CASE;
END//
DELIMITER;

SELECT hello();


-- 2) В таблице products есть два текстовых поля: name с названием товара и description с его описанием. 
-- Допустимо присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенное 
-- значение NULL неприемлема. Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля 
-- были заполнены. При попытке присвоить полям NULL-значение необходимо отменить операцию.

DELIMITER //
CREATE TRIGGER check_insert_products BEFORE INSERT ON products
	FOR EACH ROW 
		BEGIN
  			IF new.name = NULL AND new.desription = NULL
 				THEN
 			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Insert canceled';
  		END IF;
END//
DELIMITER;


DELIMITER //
CREATE TRIGGER check_update_products BEFORE UPDATE ON products
	FOR EACH ROW 
		BEGIN
  			IF new.name = NULL AND new.desription = NULL
 				THEN
 			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Insert canceled';
  		END IF;
END//
DELIMITER;
